/// <reference types="node" />
import * as gax from 'google-gax';
import { Callback, Descriptors, ClientOptions, LROperation, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Creates and manages builds on Google Cloud Platform.
 *
 *  The main concept used by this API is a `Build`, which describes the location
 *  of the source to build, how to build the source, and where to store the
 *  built artifacts, if any.
 *
 *  A user can list previously-requested builds or get builds by their ID to
 *  determine the status of the build.
 * @class
 * @memberof v1
 */
export declare class CloudBuildClient {
    private _terminated;
    private _opts;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    cloudBuildStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of CloudBuildClient.
     *
     * @param {object} [options] - The configuration object. See the subsequent
     *   parameters for more details.
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     */
    constructor(opts?: ClientOptions);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    getBuild(request: protos.google.devtools.cloudbuild.v1.IGetBuildRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IGetBuildRequest | undefined, {} | undefined]>;
    getBuild(request: protos.google.devtools.cloudbuild.v1.IGetBuildRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IGetBuildRequest | null | undefined, {} | null | undefined>): void;
    getBuild(request: protos.google.devtools.cloudbuild.v1.IGetBuildRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IGetBuildRequest | null | undefined, {} | null | undefined>): void;
    cancelBuild(request: protos.google.devtools.cloudbuild.v1.ICancelBuildRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.ICancelBuildRequest | undefined, {} | undefined]>;
    cancelBuild(request: protos.google.devtools.cloudbuild.v1.ICancelBuildRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.ICancelBuildRequest | null | undefined, {} | null | undefined>): void;
    cancelBuild(request: protos.google.devtools.cloudbuild.v1.ICancelBuildRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.ICancelBuildRequest | null | undefined, {} | null | undefined>): void;
    createBuildTrigger(request: protos.google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuildTrigger, (protos.google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest | undefined), {} | undefined]>;
    createBuildTrigger(request: protos.google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    createBuildTrigger(request: protos.google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    getBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IGetBuildTriggerRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.IGetBuildTriggerRequest | undefined, {} | undefined]>;
    getBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IGetBuildTriggerRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.IGetBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    getBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IGetBuildTriggerRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.IGetBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    deleteBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest, options?: gax.CallOptions): Promise<[protos.google.protobuf.IEmpty, (protos.google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest | undefined), {} | undefined]>;
    deleteBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest, options: gax.CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    deleteBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    updateBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuildTrigger, (protos.google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest | undefined), {} | undefined]>;
    updateBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    updateBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IBuildTrigger, protos.google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest | null | undefined, {} | null | undefined>): void;
    createWorkerPool(request: protos.google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest | undefined, {} | undefined]>;
    createWorkerPool(request: protos.google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    createWorkerPool(request: protos.google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    getWorkerPool(request: protos.google.devtools.cloudbuild.v1.IGetWorkerPoolRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.IGetWorkerPoolRequest | undefined, {} | undefined]>;
    getWorkerPool(request: protos.google.devtools.cloudbuild.v1.IGetWorkerPoolRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.IGetWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    getWorkerPool(request: protos.google.devtools.cloudbuild.v1.IGetWorkerPoolRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.IGetWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    deleteWorkerPool(request: protos.google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest, options?: gax.CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest | undefined, {} | undefined]>;
    deleteWorkerPool(request: protos.google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest, options: gax.CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    deleteWorkerPool(request: protos.google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    updateWorkerPool(request: protos.google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest | undefined, {} | undefined]>;
    updateWorkerPool(request: protos.google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    updateWorkerPool(request: protos.google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IWorkerPool, protos.google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest | null | undefined, {} | null | undefined>): void;
    listWorkerPools(request: protos.google.devtools.cloudbuild.v1.IListWorkerPoolsRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IListWorkerPoolsResponse, protos.google.devtools.cloudbuild.v1.IListWorkerPoolsRequest | undefined, {} | undefined]>;
    listWorkerPools(request: protos.google.devtools.cloudbuild.v1.IListWorkerPoolsRequest, options: gax.CallOptions, callback: Callback<protos.google.devtools.cloudbuild.v1.IListWorkerPoolsResponse, protos.google.devtools.cloudbuild.v1.IListWorkerPoolsRequest | null | undefined, {} | null | undefined>): void;
    listWorkerPools(request: protos.google.devtools.cloudbuild.v1.IListWorkerPoolsRequest, callback: Callback<protos.google.devtools.cloudbuild.v1.IListWorkerPoolsResponse, protos.google.devtools.cloudbuild.v1.IListWorkerPoolsRequest | null | undefined, {} | null | undefined>): void;
    createBuild(request: protos.google.devtools.cloudbuild.v1.ICreateBuildRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    createBuild(request: protos.google.devtools.cloudbuild.v1.ICreateBuildRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createBuild(request: protos.google.devtools.cloudbuild.v1.ICreateBuildRequest, callback: Callback<LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the createBuild() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkCreateBuildProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkCreateBuildProgress(name: string): Promise<LROperation<protos.google.devtools.cloudbuild.v1.Build, protos.google.devtools.cloudbuild.v1.BuildOperationMetadata>>;
    retryBuild(request: protos.google.devtools.cloudbuild.v1.IRetryBuildRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    retryBuild(request: protos.google.devtools.cloudbuild.v1.IRetryBuildRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    retryBuild(request: protos.google.devtools.cloudbuild.v1.IRetryBuildRequest, callback: Callback<LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the retryBuild() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkRetryBuildProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkRetryBuildProgress(name: string): Promise<LROperation<protos.google.devtools.cloudbuild.v1.Build, protos.google.devtools.cloudbuild.v1.BuildOperationMetadata>>;
    runBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IRunBuildTriggerRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    runBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IRunBuildTriggerRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    runBuildTrigger(request: protos.google.devtools.cloudbuild.v1.IRunBuildTriggerRequest, callback: Callback<LROperation<protos.google.devtools.cloudbuild.v1.IBuild, protos.google.devtools.cloudbuild.v1.IBuildOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the runBuildTrigger() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkRunBuildTriggerProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkRunBuildTriggerProgress(name: string): Promise<LROperation<protos.google.devtools.cloudbuild.v1.Build, protos.google.devtools.cloudbuild.v1.BuildOperationMetadata>>;
    listBuilds(request: protos.google.devtools.cloudbuild.v1.IListBuildsRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuild[], protos.google.devtools.cloudbuild.v1.IListBuildsRequest | null, protos.google.devtools.cloudbuild.v1.IListBuildsResponse]>;
    listBuilds(request: protos.google.devtools.cloudbuild.v1.IListBuildsRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.devtools.cloudbuild.v1.IListBuildsRequest, protos.google.devtools.cloudbuild.v1.IListBuildsResponse | null | undefined, protos.google.devtools.cloudbuild.v1.IBuild>): void;
    listBuilds(request: protos.google.devtools.cloudbuild.v1.IListBuildsRequest, callback: PaginationCallback<protos.google.devtools.cloudbuild.v1.IListBuildsRequest, protos.google.devtools.cloudbuild.v1.IListBuildsResponse | null | undefined, protos.google.devtools.cloudbuild.v1.IBuild>): void;
    /**
     * Equivalent to {@link listBuilds}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listBuilds} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   The parent of the collection of `Builds`.
     *   Format: `projects/{project}/locations/location`
     * @param {string} request.projectId
     *   Required. ID of the project.
     * @param {number} request.pageSize
     *   Number of results to return in the list.
     * @param {string} request.pageToken
     *   Token to provide to skip to a particular spot in the list.
     * @param {string} request.filter
     *   The raw filter text to constrain the results.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [Build]{@link google.devtools.cloudbuild.v1.Build} on 'data' event.
     */
    listBuildsStream(request?: protos.google.devtools.cloudbuild.v1.IListBuildsRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listBuilds}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   The parent of the collection of `Builds`.
     *   Format: `projects/{project}/locations/location`
     * @param {string} request.projectId
     *   Required. ID of the project.
     * @param {number} request.pageSize
     *   Number of results to return in the list.
     * @param {string} request.pageToken
     *   Token to provide to skip to a particular spot in the list.
     * @param {string} request.filter
     *   The raw filter text to constrain the results.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listBuildsAsync(request?: protos.google.devtools.cloudbuild.v1.IListBuildsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.devtools.cloudbuild.v1.IBuild>;
    listBuildTriggers(request: protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, options?: gax.CallOptions): Promise<[protos.google.devtools.cloudbuild.v1.IBuildTrigger[], protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest | null, protos.google.devtools.cloudbuild.v1.IListBuildTriggersResponse]>;
    listBuildTriggers(request: protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, protos.google.devtools.cloudbuild.v1.IListBuildTriggersResponse | null | undefined, protos.google.devtools.cloudbuild.v1.IBuildTrigger>): void;
    listBuildTriggers(request: protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, callback: PaginationCallback<protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, protos.google.devtools.cloudbuild.v1.IListBuildTriggersResponse | null | undefined, protos.google.devtools.cloudbuild.v1.IBuildTrigger>): void;
    /**
     * Equivalent to {@link listBuildTriggers}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listBuildTriggers} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   Required. ID of the project for which to list BuildTriggers.
     * @param {number} request.pageSize
     *   Number of results to return in the list.
     * @param {string} request.pageToken
     *   Token to provide to skip to a particular spot in the list.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [BuildTrigger]{@link google.devtools.cloudbuild.v1.BuildTrigger} on 'data' event.
     */
    listBuildTriggersStream(request?: protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listBuildTriggers}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   Required. ID of the project for which to list BuildTriggers.
     * @param {number} request.pageSize
     *   Number of results to return in the list.
     * @param {string} request.pageToken
     *   Token to provide to skip to a particular spot in the list.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listBuildTriggersAsync(request?: protos.google.devtools.cloudbuild.v1.IListBuildTriggersRequest, options?: gax.CallOptions): AsyncIterable<protos.google.devtools.cloudbuild.v1.IBuildTrigger>;
    /**
     * Return a fully-qualified buildTrigger resource name string.
     *
     * @param {string} project
     * @param {string} trigger
     * @returns {string} Resource name string.
     */
    buildTriggerPath(project: string, trigger: string): string;
    /**
     * Parse the project from BuildTrigger resource.
     *
     * @param {string} buildTriggerName
     *   A fully-qualified path representing BuildTrigger resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromBuildTriggerName(buildTriggerName: string): string | number;
    /**
     * Parse the trigger from BuildTrigger resource.
     *
     * @param {string} buildTriggerName
     *   A fully-qualified path representing BuildTrigger resource.
     * @returns {string} A string representing the trigger.
     */
    matchTriggerFromBuildTriggerName(buildTriggerName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified projectBuild resource name string.
     *
     * @param {string} project
     * @param {string} build
     * @returns {string} Resource name string.
     */
    projectBuildPath(project: string, build: string): string;
    /**
     * Parse the project from ProjectBuild resource.
     *
     * @param {string} projectBuildName
     *   A fully-qualified path representing project_build resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectBuildName(projectBuildName: string): string | number;
    /**
     * Parse the build from ProjectBuild resource.
     *
     * @param {string} projectBuildName
     *   A fully-qualified path representing project_build resource.
     * @returns {string} A string representing the build.
     */
    matchBuildFromProjectBuildName(projectBuildName: string): string | number;
    /**
     * Return a fully-qualified projectLocationBuild resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} build
     * @returns {string} Resource name string.
     */
    projectLocationBuildPath(project: string, location: string, build: string): string;
    /**
     * Parse the project from ProjectLocationBuild resource.
     *
     * @param {string} projectLocationBuildName
     *   A fully-qualified path representing project_location_build resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationBuildName(projectLocationBuildName: string): string | number;
    /**
     * Parse the location from ProjectLocationBuild resource.
     *
     * @param {string} projectLocationBuildName
     *   A fully-qualified path representing project_location_build resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationBuildName(projectLocationBuildName: string): string | number;
    /**
     * Parse the build from ProjectLocationBuild resource.
     *
     * @param {string} projectLocationBuildName
     *   A fully-qualified path representing project_location_build resource.
     * @returns {string} A string representing the build.
     */
    matchBuildFromProjectLocationBuildName(projectLocationBuildName: string): string | number;
    /**
     * Return a fully-qualified serviceAccount resource name string.
     *
     * @param {string} project
     * @param {string} service_account
     * @returns {string} Resource name string.
     */
    serviceAccountPath(project: string, serviceAccount: string): string;
    /**
     * Parse the project from ServiceAccount resource.
     *
     * @param {string} serviceAccountName
     *   A fully-qualified path representing ServiceAccount resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromServiceAccountName(serviceAccountName: string): string | number;
    /**
     * Parse the service_account from ServiceAccount resource.
     *
     * @param {string} serviceAccountName
     *   A fully-qualified path representing ServiceAccount resource.
     * @returns {string} A string representing the service_account.
     */
    matchServiceAccountFromServiceAccountName(serviceAccountName: string): string | number;
    /**
     * Terminate the GRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     */
    close(): Promise<void>;
}
